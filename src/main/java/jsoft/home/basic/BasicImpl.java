package jsoft.home.basic;

import java.sql.*;
import java.util.ArrayList;

import jsoft.*;

public class BasicImpl implements Basic {
	// Bá»™ quáº£n lÃ½ káº¿t ná»‘i cá»§a riÃªng Basic
	private ConnectionPool cp;

	// Káº¿t ná»‘i Ä‘á»ƒ Basic sá»­ dá»¥ng
	protected Connection con;

	// Ä?á»‘i tÆ°á»£ng lÃ m viá»‡c vá»›i Basic
	private String objectName;

	// Cháº¡y má»™t láº§n thÃ¬ khÃ´ng cáº§n tham sá»‘ - Cháº¡y nhiá»?u láº§n thÃ¬ cáº§n tham sá»‘
	// Tham sá»‘ Ä‘Æ°á»£c tÃ­nh trÃªn thuá»™c tÃ­nh Ä‘á»™c láº­p khÃ´ng tÃ­nh thuá»™c tÃ­nh phá»¥ thuá»™c
	public BasicImpl(ConnectionPool cp, String objectName) {
		// XÃ¡c Ä‘á»‹nh Ä‘á»‘i tÆ°á»£ng lÃ m viá»‡c
		this.objectName = objectName;

		// XÃ¡c Ä‘á»‹nh - GÃ¡n bá»™ quáº£n lÃ½ káº¿t ná»‘i
		if (cp == null) {
			// Náº¿u chÆ°a cÃ³ thÃ¬ cáº§n khá»Ÿi táº¡o
			this.cp = new ConnectionPoolImpl();
		} else {
			this.cp = cp;
		}

		// Xin káº¿t ná»‘i Ä‘á»ƒ lÃ m viá»‡c
		try {
			this.con = this.cp.getConnection(this.objectName);

			// Kiá»ƒm tra káº¿t ná»‘i
			if (this.con.getAutoCommit()) {
				this.con.setAutoCommit(false);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	private boolean exe(PreparedStatement pre) {
		if (pre != null) {
			// Thá»±c hiá»‡n cáº­p nháº­t vÃ o CSDL
			try {
				int results = pre.executeUpdate();
				if (results == 0) {
					this.con.rollback();
					return false;
				}

				// XÃ¡c nháº­n thá»±c thi sau cÃ¹ng
				this.con.commit();
				return true;

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();

				// CÃ³ lá»—i lÃªn trá»Ÿ láº¡i tráº¡ng thÃ¡i an toÃ n cá»§a káº¿t ná»‘i
				try {
					this.con.rollback();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			} finally {
				pre = null;
			}
		}

		return false;
	}



	@Override
	public ResultSet get(String sql, int id) {
		// TODO Auto-generated method stub

		// BiÃªn dá»‹ch cÃ¢u lá»‡nh sql
		try {
			PreparedStatement pre = this.con.prepareStatement(sql);
			if (id > 0) {
				pre.setInt(1, id);
			}

			return pre.executeQuery();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			try {
				this.con.rollback();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		} finally {
			sql = null;
		}
		return null;
	}

	@Override
	public ResultSet get(ArrayList<String> sql, String name, String pass) {
		// TODO Auto-generated method stub

		try {
			String str_select = sql.get(0);
			PreparedStatement pre = this.con.prepareStatement(str_select);
			pre.setString(1, name);
			pre.setString(2, pass);

			ResultSet rs = pre.executeQuery();
			if (rs != null) {
				String str_update = sql.get(1);
				PreparedStatement preUpdate = this.con.prepareStatement(str_update);
				preUpdate.setString(1, name);
				preUpdate.setString(2, pass);
				int result = preUpdate.executeUpdate();
				if (result == 0) {
					this.con.rollback();
					return null;
				} else {
					if (!this.con.getAutoCommit()) {
						this.con.commit();
					}
				}
				return rs;
			}
			return pre.executeQuery();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			try {
				this.con.rollback();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		} finally {
			name = null;
			pass = null;
		}
		return null;
	}

	@Override
	public ResultSet gets(String sql) {
		// TODO Auto-generated method stub
		return this.get(sql, 0);
	}

	@Override
	public ConnectionPool getCP() {
		// TODO Auto-generated method stub
		return this.cp;
	}

	@Override
	public void releaseConnection() {
		// TODO Auto-generated method stub
		try {
			this.cp.releaseConnection(this.con, this.objectName);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public ArrayList<ResultSet> getReLists(String mutilSelect) {
		// TODO Auto-generated method stub

		ArrayList<ResultSet> res = new ArrayList<>();

		try {
			PreparedStatement pre = this.con.prepareStatement(mutilSelect);

			boolean result = pre.execute();
			do {
				res.add(pre.getResultSet());

				// Ä?Ã¢y lÃ  sang ResultSet thá»© 2
				result = pre.getMoreResults(Statement.KEEP_CURRENT_RESULT);
			} while (result);

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			try {
				this.con.rollback();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		}

		return res;
	}

	@Override
	public boolean add(PreparedStatement pre) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean edit(PreparedStatement pre) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean del(PreparedStatement pre) {
		// TODO Auto-generated method stub
		return false;
	}

}
